{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "mustache",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_definition"
      }
    },
    "_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "block"
        },
        {
          "type": "SYMBOL",
          "name": "partial"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        },
        {
          "type": "SYMBOL",
          "name": "interpolation"
        },
        {
          "type": "SYMBOL",
          "name": "text_node"
        }
      ]
    },
    "text_node": {
      "type": "PATTERN",
      "value": "[^{}]+"
    },
    "_left_delimiter": {
      "type": "STRING",
      "value": "{{"
    },
    "_right_delimiter": {
      "type": "STRING",
      "value": "}}"
    },
    "_block_start_left_delimiter": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "{{#"
        },
        {
          "type": "STRING",
          "value": "{{^"
        }
      ]
    },
    "_block_end_left_delimiter": {
      "type": "STRING",
      "value": "{{/"
    },
    "identifier": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "[^<>\"'\\/={}()\\s\\.,!|]+"
          },
          {
            "type": "STRING",
            "value": "."
          }
        ]
      }
    },
    "path_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "PREC",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_left_delimiter"
              },
              {
                "type": "STRING",
                "value": "!"
              }
            ]
          }
        },
        {
          "type": "PATTERN",
          "value": "[^}]+"
        },
        {
          "type": "SYMBOL",
          "name": "_right_delimiter"
        }
      ]
    },
    "interpolation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_left_delimiter"
        },
        {
          "type": "FIELD",
          "name": "path",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "path_expression"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "_right_delimiter"
        }
      ]
    },
    "block_start": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_block_start_left_delimiter"
        },
        {
          "type": "FIELD",
          "name": "path",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "path_expression"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "_right_delimiter"
        }
      ]
    },
    "block_end": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_block_end_left_delimiter"
        },
        {
          "type": "FIELD",
          "name": "path",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "path_expression"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "_right_delimiter"
        }
      ]
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "block_start"
        },
        {
          "type": "FIELD",
          "name": "content",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "_definition"
            }
          }
        },
        {
          "type": "SYMBOL",
          "name": "block_end"
        }
      ]
    },
    "partial": {
      "type": "SEQ",
      "members": [
        {
          "type": "PREC",
          "value": 2,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_left_delimiter"
              },
              {
                "type": "STRING",
                "value": ">"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "path",
          "content": {
            "type": "ALIAS",
            "content": {
              "type": "PATTERN",
              "value": "[^}]+"
            },
            "named": true,
            "value": "string"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_right_delimiter"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
